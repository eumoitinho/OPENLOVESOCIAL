[
    {
      "tablename": "comments",
      "policyname": "Users can create comments",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "INSERT",
      "qual": null,
      "with_check": "(user_id = auth.uid())"
    },
    {
      "tablename": "comments",
      "policyname": "Users can delete own comments",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "DELETE",
      "qual": "(user_id = auth.uid())",
      "with_check": null
    },
    {
      "tablename": "comments",
      "policyname": "Users can update own comments",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "UPDATE",
      "qual": "(user_id = auth.uid())",
      "with_check": null
    },
    {
      "tablename": "comments",
      "policyname": "Users can view comments on visible posts",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "SELECT",
      "qual": "(EXISTS ( SELECT 1\n   FROM posts p\n  WHERE ((p.id = comments.post_id) AND (((p.visibility)::text = 'public'::text) OR (p.user_id = auth.uid()) OR (((p.visibility)::text = 'friends'::text) AND (EXISTS ( SELECT 1\n           FROM follows f\n          WHERE ((f.follower_id = auth.uid()) AND (f.following_id = p.user_id)))))))))",
      "with_check": null
    },
    {
      "tablename": "follows",
      "policyname": "Users can create follows",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "INSERT",
      "qual": null,
      "with_check": "(follower_id = auth.uid())"
    },
    {
      "tablename": "follows",
      "policyname": "Users can delete own follows",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "DELETE",
      "qual": "(follower_id = auth.uid())",
      "with_check": null
    },
    {
      "tablename": "follows",
      "policyname": "Users can view follows",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "SELECT",
      "qual": "true",
      "with_check": null
    },
    {
      "tablename": "likes",
      "policyname": "Users can create likes",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "INSERT",
      "qual": null,
      "with_check": "(user_id = auth.uid())"
    },
    {
      "tablename": "likes",
      "policyname": "Users can delete own likes",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "DELETE",
      "qual": "(user_id = auth.uid())",
      "with_check": null
    },
    {
      "tablename": "likes",
      "policyname": "Users can view likes",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "SELECT",
      "qual": "true",
      "with_check": null
    },
    {
      "tablename": "messages",
      "policyname": "Users can send messages",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "INSERT",
      "qual": null,
      "with_check": "((sender_id = auth.uid()) AND (EXISTS ( SELECT 1\n   FROM conversation_participants cp\n  WHERE ((cp.conversation_id = messages.conversation_id) AND (cp.user_id = auth.uid())))))"
    },
    {
      "tablename": "messages",
      "policyname": "Users can view own messages",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "SELECT",
      "qual": "((sender_id = auth.uid()) OR (EXISTS ( SELECT 1\n   FROM conversation_participants cp\n  WHERE ((cp.conversation_id = messages.conversation_id) AND (cp.user_id = auth.uid())))))",
      "with_check": null
    },
    {
      "tablename": "notifications",
      "policyname": "Users can update own notifications",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "UPDATE",
      "qual": "(user_id = auth.uid())",
      "with_check": null
    },
    {
      "tablename": "notifications",
      "policyname": "Users can view own notifications",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "SELECT",
      "qual": "(user_id = auth.uid())",
      "with_check": null
    },
    {
      "tablename": "posts",
      "policyname": "Users can create own posts",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "INSERT",
      "qual": null,
      "with_check": "(user_id = auth.uid())"
    },
    {
      "tablename": "posts",
      "policyname": "Users can delete own posts",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "DELETE",
      "qual": "(user_id = auth.uid())",
      "with_check": null
    },
    {
      "tablename": "posts",
      "policyname": "Users can update own posts",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "UPDATE",
      "qual": "(user_id = auth.uid())",
      "with_check": null
    },
    {
      "tablename": "posts",
      "policyname": "Users can view public posts",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "SELECT",
      "qual": "(((visibility)::text = 'public'::text) OR (user_id = auth.uid()) OR (((visibility)::text = 'friends'::text) AND (EXISTS ( SELECT 1\n   FROM follows f\n  WHERE ((f.follower_id = auth.uid()) AND (f.following_id = posts.user_id))))))",
      "with_check": null
    },
    {
      "tablename": "users",
      "policyname": "Users can update own profile",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "UPDATE",
      "qual": "(auth.uid() = id)",
      "with_check": null
    },
    {
      "tablename": "users",
      "policyname": "Users can view public profiles",
      "permissive": "PERMISSIVE",
      "roles": "{public}",
      "cmd": "SELECT",
      "qual": "(((privacy_settings ->> 'profile_visibility'::text) = 'public'::text) OR (auth.uid() = id))",
      "with_check": null
    }
  ] [
    {
      "routine_name": "create_notification",
      "routine_type": "FUNCTION",
      "data_type": "trigger"
    },
    {
      "routine_name": "search_posts",
      "routine_type": "FUNCTION",
      "data_type": "record"
    },
    {
      "routine_name": "search_users",
      "routine_type": "FUNCTION",
      "data_type": "record"
    },
    {
      "routine_name": "update_comment_stats",
      "routine_type": "FUNCTION",
      "data_type": "trigger"
    },
    {
      "routine_name": "update_post_stats",
      "routine_type": "FUNCTION",
      "data_type": "trigger"
    },
    {
      "routine_name": "update_updated_at_column",
      "routine_type": "FUNCTION",
      "data_type": "trigger"
    },
    {
      "routine_name": "update_user_stats",
      "routine_type": "FUNCTION",
      "data_type": "trigger"
    }
  ] [
    {
      "tablename": "blocks",
      "indexname": "blocks_blocker_id_blocked_id_key",
      "indexdef": "CREATE UNIQUE INDEX blocks_blocker_id_blocked_id_key ON public.blocks USING btree (blocker_id, blocked_id)"
    },
    {
      "tablename": "blocks",
      "indexname": "blocks_pkey",
      "indexdef": "CREATE UNIQUE INDEX blocks_pkey ON public.blocks USING btree (id)"
    },
    {
      "tablename": "comments",
      "indexname": "comments_pkey",
      "indexdef": "CREATE UNIQUE INDEX comments_pkey ON public.comments USING btree (id)"
    },
    {
      "tablename": "comments",
      "indexname": "idx_comments_created_at",
      "indexdef": "CREATE INDEX idx_comments_created_at ON public.comments USING btree (created_at DESC)"
    },
    {
      "tablename": "comments",
      "indexname": "idx_comments_parent_id",
      "indexdef": "CREATE INDEX idx_comments_parent_id ON public.comments USING btree (parent_id)"
    },
    {
      "tablename": "comments",
      "indexname": "idx_comments_post_id",
      "indexdef": "CREATE INDEX idx_comments_post_id ON public.comments USING btree (post_id)"
    },
    {
      "tablename": "comments",
      "indexname": "idx_comments_user_id",
      "indexdef": "CREATE INDEX idx_comments_user_id ON public.comments USING btree (user_id)"
    },
    {
      "tablename": "conversation_participants",
      "indexname": "conversation_participants_conversation_id_user_id_key",
      "indexdef": "CREATE UNIQUE INDEX conversation_participants_conversation_id_user_id_key ON public.conversation_participants USING btree (conversation_id, user_id)"
    },
    {
      "tablename": "conversation_participants",
      "indexname": "conversation_participants_pkey",
      "indexdef": "CREATE UNIQUE INDEX conversation_participants_pkey ON public.conversation_participants USING btree (id)"
    },
    {
      "tablename": "conversations",
      "indexname": "conversations_pkey",
      "indexdef": "CREATE UNIQUE INDEX conversations_pkey ON public.conversations USING btree (id)"
    },
    {
      "tablename": "event_participants",
      "indexname": "event_participants_event_id_user_id_key",
      "indexdef": "CREATE UNIQUE INDEX event_participants_event_id_user_id_key ON public.event_participants USING btree (event_id, user_id)"
    },
    {
      "tablename": "event_participants",
      "indexname": "event_participants_pkey",
      "indexdef": "CREATE UNIQUE INDEX event_participants_pkey ON public.event_participants USING btree (id)"
    },
    {
      "tablename": "events",
      "indexname": "events_pkey",
      "indexdef": "CREATE UNIQUE INDEX events_pkey ON public.events USING btree (id)"
    },
    {
      "tablename": "events",
      "indexname": "idx_events_category",
      "indexdef": "CREATE INDEX idx_events_category ON public.events USING btree (category)"
    },
    {
      "tablename": "events",
      "indexname": "idx_events_creator_id",
      "indexdef": "CREATE INDEX idx_events_creator_id ON public.events USING btree (creator_id)"
    },
    {
      "tablename": "events",
      "indexname": "idx_events_event_date",
      "indexdef": "CREATE INDEX idx_events_event_date ON public.events USING btree (event_date)"
    },
    {
      "tablename": "events",
      "indexname": "idx_events_location",
      "indexdef": "CREATE INDEX idx_events_location ON public.events USING btree (location)"
    },
    {
      "tablename": "follows",
      "indexname": "follows_follower_id_following_id_key",
      "indexdef": "CREATE UNIQUE INDEX follows_follower_id_following_id_key ON public.follows USING btree (follower_id, following_id)"
    },
    {
      "tablename": "follows",
      "indexname": "follows_pkey",
      "indexdef": "CREATE UNIQUE INDEX follows_pkey ON public.follows USING btree (id)"
    },
    {
      "tablename": "follows",
      "indexname": "idx_follows_created_at",
      "indexdef": "CREATE INDEX idx_follows_created_at ON public.follows USING btree (created_at DESC)"
    },
    {
      "tablename": "follows",
      "indexname": "idx_follows_follower_id",
      "indexdef": "CREATE INDEX idx_follows_follower_id ON public.follows USING btree (follower_id)"
    },
    {
      "tablename": "follows",
      "indexname": "idx_follows_following_id",
      "indexdef": "CREATE INDEX idx_follows_following_id ON public.follows USING btree (following_id)"
    },
    {
      "tablename": "likes",
      "indexname": "idx_likes_created_at",
      "indexdef": "CREATE INDEX idx_likes_created_at ON public.likes USING btree (created_at DESC)"
    },
    {
      "tablename": "likes",
      "indexname": "idx_likes_target",
      "indexdef": "CREATE INDEX idx_likes_target ON public.likes USING btree (target_type, target_id)"
    },
    {
      "tablename": "likes",
      "indexname": "idx_likes_user_id",
      "indexdef": "CREATE INDEX idx_likes_user_id ON public.likes USING btree (user_id)"
    },
    {
      "tablename": "likes",
      "indexname": "likes_pkey",
      "indexdef": "CREATE UNIQUE INDEX likes_pkey ON public.likes USING btree (id)"
    },
    {
      "tablename": "likes",
      "indexname": "likes_user_id_target_type_target_id_key",
      "indexdef": "CREATE UNIQUE INDEX likes_user_id_target_type_target_id_key ON public.likes USING btree (user_id, target_type, target_id)"
    },
    {
      "tablename": "messages",
      "indexname": "idx_messages_conversation_id",
      "indexdef": "CREATE INDEX idx_messages_conversation_id ON public.messages USING btree (conversation_id)"
    },
    {
      "tablename": "messages",
      "indexname": "idx_messages_created_at",
      "indexdef": "CREATE INDEX idx_messages_created_at ON public.messages USING btree (created_at DESC)"
    },
    {
      "tablename": "messages",
      "indexname": "idx_messages_sender_id",
      "indexdef": "CREATE INDEX idx_messages_sender_id ON public.messages USING btree (sender_id)"
    },
    {
      "tablename": "messages",
      "indexname": "messages_pkey",
      "indexdef": "CREATE UNIQUE INDEX messages_pkey ON public.messages USING btree (id)"
    },
    {
      "tablename": "notifications",
      "indexname": "idx_notifications_created_at",
      "indexdef": "CREATE INDEX idx_notifications_created_at ON public.notifications USING btree (created_at DESC)"
    },
    {
      "tablename": "notifications",
      "indexname": "idx_notifications_is_read",
      "indexdef": "CREATE INDEX idx_notifications_is_read ON public.notifications USING btree (is_read)"
    },
    {
      "tablename": "notifications",
      "indexname": "idx_notifications_user_id",
      "indexdef": "CREATE INDEX idx_notifications_user_id ON public.notifications USING btree (user_id)"
    },
    {
      "tablename": "notifications",
      "indexname": "notifications_pkey",
      "indexdef": "CREATE UNIQUE INDEX notifications_pkey ON public.notifications USING btree (id)"
    },
    {
      "tablename": "posts",
      "indexname": "idx_posts_created_at",
      "indexdef": "CREATE INDEX idx_posts_created_at ON public.posts USING btree (created_at DESC)"
    },
    {
      "tablename": "posts",
      "indexname": "idx_posts_hashtags",
      "indexdef": "CREATE INDEX idx_posts_hashtags ON public.posts USING gin (hashtags)"
    },
    {
      "tablename": "posts",
      "indexname": "idx_posts_is_event",
      "indexdef": "CREATE INDEX idx_posts_is_event ON public.posts USING btree (is_event)"
    },
    {
      "tablename": "posts",
      "indexname": "idx_posts_user_id",
      "indexdef": "CREATE INDEX idx_posts_user_id ON public.posts USING btree (user_id)"
    },
    {
      "tablename": "posts",
      "indexname": "idx_posts_visibility",
      "indexdef": "CREATE INDEX idx_posts_visibility ON public.posts USING btree (visibility)"
    },
    {
      "tablename": "posts",
      "indexname": "posts_pkey",
      "indexdef": "CREATE UNIQUE INDEX posts_pkey ON public.posts USING btree (id)"
    },
    {
      "tablename": "premium_content",
      "indexname": "premium_content_pkey",
      "indexdef": "CREATE UNIQUE INDEX premium_content_pkey ON public.premium_content USING btree (id)"
    },
    {
      "tablename": "premium_purchases",
      "indexname": "premium_purchases_buyer_id_content_id_key",
      "indexdef": "CREATE UNIQUE INDEX premium_purchases_buyer_id_content_id_key ON public.premium_purchases USING btree (buyer_id, content_id)"
    },
    {
      "tablename": "premium_purchases",
      "indexname": "premium_purchases_pkey",
      "indexdef": "CREATE UNIQUE INDEX premium_purchases_pkey ON public.premium_purchases USING btree (id)"
    },
    {
      "tablename": "reports",
      "indexname": "reports_pkey",
      "indexdef": "CREATE UNIQUE INDEX reports_pkey ON public.reports USING btree (id)"
    },
    {
      "tablename": "users",
      "indexname": "idx_users_email",
      "indexdef": "CREATE INDEX idx_users_email ON public.users USING btree (email)"
    },
    {
      "tablename": "users",
      "indexname": "idx_users_is_premium",
      "indexdef": "CREATE INDEX idx_users_is_premium ON public.users USING btree (is_premium)"
    },
    {
      "tablename": "users",
      "indexname": "idx_users_last_seen",
      "indexdef": "CREATE INDEX idx_users_last_seen ON public.users USING btree (last_seen)"
    },
    {
      "tablename": "users",
      "indexname": "idx_users_location",
      "indexdef": "CREATE INDEX idx_users_location ON public.users USING btree (location)"
    },
    {
      "tablename": "users",
      "indexname": "idx_users_username",
      "indexdef": "CREATE INDEX idx_users_username ON public.users USING btree (username)"
    },
    {
      "tablename": "users",
      "indexname": "users_email_key",
      "indexdef": "CREATE UNIQUE INDEX users_email_key ON public.users USING btree (email)"
    },
    {
      "tablename": "users",
      "indexname": "users_pkey",
      "indexdef": "CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id)"
    },
    {
      "tablename": "users",
      "indexname": "users_username_key",
      "indexdef": "CREATE UNIQUE INDEX users_username_key ON public.users USING btree (username)"
    }
  ][
    {
      "table_name": "posts",
      "column_name": "user_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "comments",
      "column_name": "post_id",
      "foreign_table_name": "posts",
      "foreign_column_name": "id"
    },
    {
      "table_name": "comments",
      "column_name": "user_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "comments",
      "column_name": "parent_id",
      "foreign_table_name": "comments",
      "foreign_column_name": "id"
    },
    {
      "table_name": "likes",
      "column_name": "user_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "follows",
      "column_name": "follower_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "follows",
      "column_name": "following_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "conversations",
      "column_name": "created_by",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "conversation_participants",
      "column_name": "conversation_id",
      "foreign_table_name": "conversations",
      "foreign_column_name": "id"
    },
    {
      "table_name": "conversation_participants",
      "column_name": "user_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "messages",
      "column_name": "conversation_id",
      "foreign_table_name": "conversations",
      "foreign_column_name": "id"
    },
    {
      "table_name": "messages",
      "column_name": "sender_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "messages",
      "column_name": "reply_to_id",
      "foreign_table_name": "messages",
      "foreign_column_name": "id"
    },
    {
      "table_name": "events",
      "column_name": "post_id",
      "foreign_table_name": "posts",
      "foreign_column_name": "id"
    },
    {
      "table_name": "events",
      "column_name": "creator_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "event_participants",
      "column_name": "event_id",
      "foreign_table_name": "events",
      "foreign_column_name": "id"
    },
    {
      "table_name": "event_participants",
      "column_name": "user_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "notifications",
      "column_name": "user_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "reports",
      "column_name": "reporter_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "reports",
      "column_name": "reported_user_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "reports",
      "column_name": "reviewed_by",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "blocks",
      "column_name": "blocker_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "blocks",
      "column_name": "blocked_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "premium_content",
      "column_name": "creator_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "premium_content",
      "column_name": "post_id",
      "foreign_table_name": "posts",
      "foreign_column_name": "id"
    },
    {
      "table_name": "premium_purchases",
      "column_name": "buyer_id",
      "foreign_table_name": "users",
      "foreign_column_name": "id"
    },
    {
      "table_name": "premium_purchases",
      "column_name": "content_id",
      "foreign_table_name": "premium_content",
      "foreign_column_name": "id"
    }
  ][
    {
      "column_name": "instance_id",
      "data_type": "uuid"
    },
    {
      "column_name": "id",
      "data_type": "uuid"
    },
    {
      "column_name": "aud",
      "data_type": "character varying"
    },
    {
      "column_name": "role",
      "data_type": "character varying"
    },
    {
      "column_name": "email",
      "data_type": "character varying"
    },
    {
      "column_name": "encrypted_password",
      "data_type": "character varying"
    },
    {
      "column_name": "email_confirmed_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "invited_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "confirmation_token",
      "data_type": "character varying"
    },
    {
      "column_name": "confirmation_sent_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "recovery_token",
      "data_type": "character varying"
    },
    {
      "column_name": "recovery_sent_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "email_change_token_new",
      "data_type": "character varying"
    },
    {
      "column_name": "email_change",
      "data_type": "character varying"
    },
    {
      "column_name": "email_change_sent_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "last_sign_in_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "raw_app_meta_data",
      "data_type": "jsonb"
    },
    {
      "column_name": "raw_user_meta_data",
      "data_type": "jsonb"
    },
    {
      "column_name": "is_super_admin",
      "data_type": "boolean"
    },
    {
      "column_name": "created_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "updated_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "phone",
      "data_type": "text"
    },
    {
      "column_name": "phone_confirmed_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "phone_change",
      "data_type": "text"
    },
    {
      "column_name": "phone_change_token",
      "data_type": "character varying"
    },
    {
      "column_name": "phone_change_sent_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "confirmed_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "email_change_token_current",
      "data_type": "character varying"
    },
    {
      "column_name": "email_change_confirm_status",
      "data_type": "smallint"
    },
    {
      "column_name": "banned_until",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "reauthentication_token",
      "data_type": "character varying"
    },
    {
      "column_name": "reauthentication_sent_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "is_sso_user",
      "data_type": "boolean"
    },
    {
      "column_name": "deleted_at",
      "data_type": "timestamp with time zone"
    },
    {
      "column_name": "is_anonymous",
      "data_type": "boolean"
    }
  ][
    {
      "table_name": "users",
      "column_name": "id",
      "data_type": "uuid",
      "is_nullable": "NO",
      "column_default": "uuid_generate_v4()"
    },
    {
      "table_name": "users",
      "column_name": "email",
      "data_type": "character varying",
      "is_nullable": "NO",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "username",
      "data_type": "character varying",
      "is_nullable": "NO",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "name",
      "data_type": "character varying",
      "is_nullable": "NO",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "bio",
      "data_type": "text",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "avatar_url",
      "data_type": "text",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "cover_url",
      "data_type": "text",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "location",
      "data_type": "character varying",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "age",
      "data_type": "integer",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "gender",
      "data_type": "character varying",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "interests",
      "data_type": "ARRAY",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "relationship_status",
      "data_type": "character varying",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "looking_for",
      "data_type": "ARRAY",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "is_premium",
      "data_type": "boolean",
      "is_nullable": "YES",
      "column_default": "false"
    },
    {
      "table_name": "users",
      "column_name": "premium_expires_at",
      "data_type": "timestamp without time zone",
      "is_nullable": "YES",
      "column_default": null
    },
    {
      "table_name": "users",
      "column_name": "is_verified",
      "data_type": "boolean",
      "is_nullable": "YES",
      "column_default": "false"
    },
    {
      "table_name": "users",
      "column_name": "is_active",
      "data_type": "boolean",
      "is_nullable": "YES",
      "column_default": "true"
    },
    {
      "table_name": "users",
      "column_name": "last_seen",
      "data_type": "timestamp without time zone",
      "is_nullable": "YES",
      "column_default": "now()"
    },
    {
      "table_name": "users",
      "column_name": "created_at",
      "data_type": "timestamp without time zone",
      "is_nullable": "YES",
      "column_default": "now()"
    },
    {
      "table_name": "users",
      "column_name": "updated_at",
      "data_type": "timestamp without time zone",
      "is_nullable": "YES",
      "column_default": "now()"
    },
    {
      "table_name": "users",
      "column_name": "privacy_settings",
      "data_type": "jsonb",
      "is_nullable": "YES",
      "column_default": "'{\"show_age\": true, \"show_location\": true, \"allow_messages\": \"everyone\", \"profile_visibility\": \"public\", \"show_online_status\": true}'::jsonb"
    },
    {
      "table_name": "users",
      "column_name": "stats",
      "data_type": "jsonb",
      "is_nullable": "YES",
      "column_default": "'{\"posts\": 0, \"earnings\": 0, \"followers\": 0, \"following\": 0, \"profile_views\": 0, \"likes_received\": 0, \"comments_received\": 0}'::jsonb"
    }
  ]